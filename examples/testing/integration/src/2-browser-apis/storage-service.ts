// –¢–∏–ø–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏
export interface UserPreferences {
  theme: 'light' | 'dark'
  language: 'uk' | 'en'
  notifications: boolean
}

export interface SessionData {
  token: string
  userId: number
  expiresAt: number
}

// –°–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ localStorage —Ç–∞ sessionStorage
export class StorageService {
  private readonly localStorage: Storage
  private readonly sessionStorage: Storage

  constructor(
    localStorage = window.localStorage,
    sessionStorage = window.sessionStorage
  ) {
    this.localStorage = localStorage
    this.sessionStorage = sessionStorage
  }

  // üì¶ LocalStorage –º–µ—Ç–æ–¥–∏ (–¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è)

  /**
   * –ó–±–µ—Ä–µ–≥—Ç–∏ –æ–±'—î–∫—Ç –≤ localStorage
   */
  setItem<T>(key: string, value: T): boolean {
    try {
      const serialized = JSON.stringify(value)
      this.localStorage.setItem(key, serialized)
      return true
    } catch (error) {
      console.error('Failed to save to localStorage:', error)
      return false
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±'—î–∫—Ç –∑ localStorage
   */
  getItem<T>(key: string): T | null {
    try {
      const item = this.localStorage.getItem(key)
      if (item === null) return null
      return JSON.parse(item) as T
    } catch (error) {
      console.error('Failed to read from localStorage:', error)
      return null
    }
  }

  /**
   * –í–∏–¥–∞–ª–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –∑ localStorage
   */
  removeItem(key: string): boolean {
    try {
      this.localStorage.removeItem(key)
      return true
    } catch (error) {
      console.error('Failed to remove from localStorage:', error)
      return false
    }
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç–∏ –≤–µ—Å—å localStorage
   */
  clearStorage(): boolean {
    try {
      this.localStorage.clear()
      return true
    } catch (error) {
      console.error('Failed to clear localStorage:', error)
      return false
    }
  }

  // üéØ SessionStorage –º–µ—Ç–æ–¥–∏ (–¥–ª—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è)

  /**
   * –ó–±–µ—Ä–µ–≥—Ç–∏ –æ–±'—î–∫—Ç –≤ sessionStorage
   */
  setSessionItem<T>(key: string, value: T): boolean {
    try {
      const serialized = JSON.stringify(value)
      this.sessionStorage.setItem(key, serialized)
      return true
    } catch (error) {
      console.error('Failed to save to sessionStorage:', error)
      return false
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±'—î–∫—Ç –∑ sessionStorage
   */
  getSessionItem<T>(key: string): T | null {
    try {
      const item = this.sessionStorage.getItem(key)
      if (item === null) return null
      return JSON.parse(item) as T
    } catch (error) {
      console.error('Failed to read from sessionStorage:', error)
      return null
    }
  }

  /**
   * –í–∏–¥–∞–ª–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –∑ sessionStorage
   */
  removeSessionItem(key: string): boolean {
    try {
      this.sessionStorage.removeItem(key)
      return true
    } catch (error) {
      console.error('Failed to remove from sessionStorage:', error)
      return false
    }
  }

  // üë§ –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å

  /**
   * –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   */
  saveUserPreferences(preferences: UserPreferences): boolean {
    return this.setItem('userPreferences', preferences)
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   */
  getUserPreferences(): UserPreferences | null {
    return this.getItem<UserPreferences>('userPreferences')
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
   */
  getUserPreferencesWithDefaults(): UserPreferences {
    const preferences = this.getUserPreferences()
    return preferences ?? {
      theme: 'light',
      language: 'uk',
      notifications: true
    }
  }

  // üîê –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Å–µ—Å—ñ—î—é

  /**
   * –ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó
   */
  saveSession(sessionData: SessionData): boolean {
    return this.setSessionItem('session', sessionData)
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó
   */
  getSession(): SessionData | null {
    return this.getSessionItem<SessionData>('session')
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —Å–µ—Å—ñ—è —â–µ –¥—ñ–π—Å–Ω–∞
   */
  isSessionValid(): boolean {
    const session = this.getSession()
    if (!session) return false
    
    return Date.now() < session.expiresAt
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç–∏ —Å–µ—Å—ñ—é
   */
  clearSession(): boolean {
    return this.removeSessionItem('session')
  }

  // üìä –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ –º–µ—Ç–æ–¥–∏

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä localStorage (–Ω–∞–±–ª–∏–∂–µ–Ω–æ)
   */
  getStorageSize(): number {
    let total = 0
    for (let key in this.localStorage) {
      if (this.localStorage.hasOwnProperty(key)) {
        total += this.localStorage[key].length + key.length
      }
    }
    return total
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π localStorage
   */
  isLocalStorageAvailable(): boolean {
    try {
      const test = '__localStorage_test__'
      this.localStorage.setItem(test, test)
      this.localStorage.removeItem(test)
      return true
    } catch {
      return false
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–ª—é—á—ñ localStorage
   */
  getStorageKeys(): string[] {
    return Object.keys(this.localStorage)
  }
} 