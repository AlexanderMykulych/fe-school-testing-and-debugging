import { test, expect } from '../fixtures/auth-fixture'

test.describe('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤', () => {
  test.beforeEach(async ({ page, ensureLoggedOut }) => {
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤ –ø–µ—Ä–µ–¥ –∫–æ–∂–Ω–∏–º —Ç–µ—Å—Ç–æ–º
    await ensureLoggedOut()
  })

  test('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞', async ({ page, loginAsAdmin }) => {
    await loginAsAdmin()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    await expect(page).toHaveURL('/')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    await expect(page.getByTestId('user-greeting')).toContainText('admin')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–Ω–æ–ø–∫–∞ –ª–æ–≥–∞—É—Ç—É –¥–æ—Å—Ç—É–ø–Ω–∞
    await expect(page.getByTestId('logout-button')).toBeVisible()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–Ω–æ–ø–∫–∞ –ª–æ–≥—ñ–Ω—É –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è
    await expect(page.getByTestId('login-link')).not.toBeVisible()
  })

  test('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', async ({ page, loginAsUser }) => {
    await loginAsUser()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    await expect(page).toHaveURL('/')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    await expect(page.getByTestId('user-greeting')).toContainText('user')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await expect(page.getByTestId('user-section')).toBeVisible()
  })

  test('‚ùå –ù–µ–≤–¥–∞–ª–∏–π –ª–æ–≥—ñ–Ω –∑ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏', async ({ page }) => {
    await page.goto('/login')
    
    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Ñ–æ—Ä–º—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
    await page.getByTestId('username-input').fill('wrong_user')
    await page.getByTestId('password-input').fill('wrong_password')
    
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É
    await page.getByTestId('submit-button').click()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    await expect(page.getByTestId('error-message')).toBeVisible()
    await expect(page.getByTestId('error-message')).toContainText('–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∑–∞–ª–∏—à–∏–ª–∏—Å—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ª–æ–≥—ñ–Ω—É
    await expect(page).toHaveURL('/login')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
    await expect(page.getByTestId('user-greeting')).not.toBeVisible()
  })

  test('üîÑ –õ–æ–≥–∞—É—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', async ({ page, loginAsUser, logout }) => {
    // –°–ø–æ—á–∞—Ç–∫—É –ª–æ–≥—ñ–Ω–∏–º–æ—Å—è
    await loginAsUser()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω—ñ
    await expect(page.getByTestId('user-greeting')).toBeVisible()
    
    // –í–∏–∫–æ–Ω—É—î–º–æ –ª–æ–≥–∞—É—Ç
    await logout()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    await expect(page).toHaveURL('/')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
    await expect(page.getByTestId('login-link')).toBeVisible()
    await expect(page.getByTestId('user-greeting')).not.toBeVisible()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è CTA –¥–ª—è –≥–æ—Å—Ç—ñ–≤
    await expect(page.getByTestId('guest-cta')).toBeVisible()
  })

  test('üìù –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –ª–æ–≥—ñ–Ω—É', async ({ page }) => {
    await page.goto('/login')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –ø—É—Å—Ç–∏—Ö –ø–æ–ª—ñ–≤
    await page.getByTestId('submit-button').click()
    
    await expect(page.getByTestId('username-error')).toBeVisible()
    await expect(page.getByTestId('password-error')).toBeVisible()
    
    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Ç—ñ–ª—å–∫–∏ –ª–æ–≥—ñ–Ω
    await page.getByTestId('username-input').fill('test')
    await page.getByTestId('submit-button').click()
    
    // –õ–æ–≥—ñ–Ω –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤–∞–ª—ñ–¥–Ω–∏–º, –∞–ª–µ –ø–∞—Ä–æ–ª—å —â–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
    await expect(page.getByTestId('username-error')).not.toBeVisible()
    await expect(page.getByTestId('password-error')).toBeVisible()
  })

  test('üö™ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ª–æ–≥—ñ–Ω—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤', async ({ 
    page, 
    loginAsUser 
  }) => {
    // –õ–æ–≥—ñ–Ω–∏–º–æ—Å—è
    await loginAsUser()
    
    // –ü—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ª–æ–≥—ñ–Ω—É
    await page.goto('/login')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    await expect(page).toHaveURL('/')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–º
    await expect(page.getByTestId('user-greeting')).toBeVisible()
  })

  test('üîí –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏', async ({ 
    page, 
    loginAsAdmin 
  }) => {
    // –õ–æ–≥—ñ–Ω–∏–º–æ—Å—è
    await loginAsAdmin()
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    await page.reload()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–º
    await expect(page.getByTestId('user-greeting')).toBeVisible()
    await expect(page.getByTestId('user-greeting')).toContainText('admin')
  })

  test('‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Å–µ—Å—ñ—ó', async ({ page, loginAsUser }) => {
    await loginAsUser()
    
    // –°–∏–º—É–ª—é—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑ localStorage (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ª–æ–≥–∞—É—Ç)
    await page.evaluate(() => {
      localStorage.removeItem('user')
    })
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    await page.reload()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
    await expect(page.getByTestId('login-link')).toBeVisible()
    await expect(page.getByTestId('user-greeting')).not.toBeVisible()
  })

  test('üë§ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ä–æ–ª–µ–π', async ({ page, loginAsAdmin }) => {
    await loginAsAdmin()
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –¥–ª—è –∞–¥–º—ñ–Ω–∞ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä–æ–ª—å
    await expect(page.getByTestId('user-section')).toBeVisible()
    await expect(page.getByTestId('user-section')).toContainText('–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä')
    
    // –í–∏—Ö–æ–¥–∏–º–æ —Ç–∞ –≤—Ö–æ–¥–∏–º–æ —è–∫ –∑–≤–∏—á–∞–π–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    await page.getByTestId('logout-button').click()
    
    await page.goto('/login')
    await page.getByTestId('username-input').fill('user')
    await page.getByTestId('password-input').fill('user123')
    await page.getByTestId('submit-button').click()
    
    await expect(page.getByTestId('success-notification')).toBeVisible()
    await page.waitForURL('/')
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ä–æ–ª—å
    await expect(page.getByTestId('user-section')).toBeVisible()
    await expect(page.getByTestId('user-section')).toContainText('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á')
  })

  test('üîÑ –ú–Ω–æ–∂–∏–Ω–Ω—ñ —Å–ø—Ä–æ–±–∏ –ª–æ–≥—ñ–Ω—É', async ({ page }) => {
    await page.goto('/login')
    
    // –î–µ–∫—ñ–ª—å–∫–∞ –Ω–µ–≤–¥–∞–ª–∏—Ö —Å–ø—Ä–æ–±
    for (let i = 0; i < 3; i++) {
      await page.getByTestId('username-input').fill(`wrong_user_${i}`)
      await page.getByTestId('password-input').fill(`wrong_password_${i}`)
      await page.getByTestId('submit-button').click()
      
      await expect(page.getByTestId('error-message')).toBeVisible()
      
      // –û—á–∏—â—É—î–º–æ –ø–æ–ª—è –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —Å–ø—Ä–æ–±–∏
      await page.getByTestId('username-input').clear()
      await page.getByTestId('password-input').clear()
    }
    
    // –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —É—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω
    await page.getByTestId('username-input').fill('admin')
    await page.getByTestId('password-input').fill('admin123')
    await page.getByTestId('submit-button').click()
    
    await expect(page.getByTestId('success-notification')).toBeVisible()
    await page.waitForURL('/')
  })
}) 